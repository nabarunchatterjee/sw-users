# coding: utf-8


from __future__ import absolute_import
import json
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util
from swagger_server.database import Base
from sqlalchemy import Column, Integer, String


class User(Base):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    __tablename__ = 'user'
    _id = Column(Integer, primary_key=True)
    _username = Column(String(50), unique=True)
    _first_name = Column(String(50), unique=True)
    _last_name = Column(String(50), unique=True)
    _password = Column(String(50), unique=True)
    _email = Column(String(120), unique=True)

    #def __init__(self, id: int=None, username: str=None, first_name: str=None, last_name: str=None, email: str=None, password: str=None):  # noqa: E501
    def __init__(self, username: str=None, first_name: str=None, last_name: str=None, email: str=None, password: str=None):  # noqa: E501
        """User - a model defined in Swagger

        :param id: The id of this User.  # noqa: E501
        :type id: int
        :param username: The username of this User.  # noqa: E501
        :type username: str
        :param first_name: The first_name of this User.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this User.  # noqa: E501
        :type last_name: str
        :param email: The email of this User.  # noqa: E501
        :type email: str
        :param password: The password of this User.  # noqa: E501
        :type password: str
        """
        self.swagger_types = {
#            'id': int,
#            'username': str,
#            'first_name': str,
#            'last_name': str,
#            'email': str,
#            'password': str
        }

        self.attribute_map = {
#            'id': 'id',
            'username': 'username',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'email': 'email',
            'password': 'password'
        }

#        self._id = id
        self._username = username
        self._first_name = first_name
        self._last_name = last_name
        self._email = email
        self._password = password

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    def to_dict(self):
        body = { "_username": self._username, "_lastname": self._last_name,
                "_first_name": self._first_name, "_email": self._email,
                "_password": self._password }
        return body
